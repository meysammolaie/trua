rules_version = '2';

// Helper function to check for admin role
function isAdmin() {
  return request.auth.token.email == 'admin@example.com';
}

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can read their own document, or an admin can read any user document
      allow read: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      
      // A user can update their own document
      allow update: if request.auth != null && request.auth.uid == userId;

      // No one should be able to delete a user document from the client
      allow delete: if false;
    }

    // Rules for the 'investments' collection
    match /investments/{investmentId} {
        // Any authenticated user can create an investment for themselves
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

        // A user can read their own investments, or an admin can read any investment
        allow read: if (request.auth != null && request.auth.uid == resource.data.userId) || isAdmin();

        // An admin can update the status of an investment (e.g., from 'pending' to 'active')
        allow update: if isAdmin();
        
        // No one should be able to delete an investment from the client
        allow delete: if false;
    }
  }
}
